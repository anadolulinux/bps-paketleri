#!/usr/bin/env bash
name="linux"
version="6.9.6"
description="Linux kernel"
source="https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-$version.tar.xz"
depends=""
builddepend="bc,cpio,gettext,elfutils,pahole,perl,python,tar,xz-utils"
group="sys.kernel"

setup(){
	export KBUILD_BUILD_HOST=basitlinux
	export KBUILD_BUILD_USER=$name
	export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

	
	cp -prvf $PACKAGEDIR/files/ /tmp/bps/build/
	cd $SOURCEDIR
	
	patch -Np1 -i ../files/patch-6.9.6
	cd ../files/config .config
	make defconfig
	diff -u ../config .config || :
    
    make -s kernelrelease > version
  	echo "Prepared $name version $(<version)"

}
build(){
    make all
	make -C tools/bpf/bpftool vmlinux.h feature-clang-bpf-co-re=1
	#make htmldocs

}

package(){
	local modulesdir="$DESTDIR/usr/lib64/modules/$(<version)"
	install -Dm644 "$(make -s image_name)" "$modulesdir/vmlinuz"
	echo "$name" | install -Dm644 /dev/stdin "$modulesdir/name"
	
	echo "Installing modules..."
	ZSTD_CLEVEL=19 make INSTALL_MOD_PATH="$DESTDIR/usr" INSTALL_MOD_STRIP=1 \
    DEPMOD=/doesnt/exist modules_install  # Suppress depmod

  # remove build link
  rm "$modulesdir"/build

	local builddir="$DESTDIR/usr/lib64/modules/$(<version)/build"

	echo "Installing build files..."
	install -Dt "$builddir" -m644 .config Makefile Module.symvers System.map \
	localversion.* version vmlinux tools/bpf/bpftool/vmlinux.h
	install -Dt "$builddir/kernel" -m644 kernel/Makefile
	install -Dt "$builddir/arch/x86" -m644 arch/x86/Makefile
	cp -t "$builddir" -a scripts

	# required when STACK_VALIDATION is enabled
	install -Dt "$builddir/tools/objtool" tools/objtool/objtool

	# required when DEBUG_INFO_BTF_MODULES is enabled
	install -Dt "$builddir/tools/bpf/resolve_btfids" tools/bpf/resolve_btfids/resolve_btfids

	echo "Installing headers..."
	cp -t "$builddir" -a include
	cp -t "$builddir/arch/x86" -a arch/x86/include
	install -Dt "$builddir/arch/x86/kernel" -m644 arch/x86/kernel/asm-offsets.s

	install -Dt "$builddir/drivers/md" -m644 drivers/md/*.h
	install -Dt "$builddir/net/mac80211" -m644 net/mac80211/*.h

	# https://bugs.archlinux.org/task/13146
	install -Dt "$builddir/drivers/media/i2c" -m644 drivers/media/i2c/msp3400-driver.h

	# https://bugs.archlinux.org/task/20402
	install -Dt "$builddir/drivers/media/usb/dvb-usb" -m644 drivers/media/usb/dvb-usb/*.h
	install -Dt "$builddir/drivers/media/dvb-frontends" -m644 drivers/media/dvb-frontends/*.h
	install -Dt "$builddir/drivers/media/tuners" -m644 drivers/media/tuners/*.h

	# https://bugs.archlinux.org/task/71392
	install -Dt "$builddir/drivers/iio/common/hid-sensors" -m644 drivers/iio/common/hid-sensors/*.h
	
	echo "Installing KConfig files..."
	find . -name 'Kconfig*' -exec install -Dm644 {} "$builddir/{}" \;

	echo "Removing unneeded architectures..."
	local arch
	for arch in "$builddir"/arch/*/; do
		[[ $arch = */x86/ ]] && continue
		echo "Removing $(basename "$arch")"
		rm -r "$arch"
	done

	echo "Removing documentation..."
	rm -r "$builddir/Documentation"

	echo "Removing broken symlinks..."
	find -L "$builddir" -type l -printf 'Removing %P\n' -delete

	echo "Removing loose objects..."
	find "$builddir" -type f -name '*.o' -printf 'Removing %P\n' -delete

	echo "Stripping build tools..."
	local file
	while read -rd '' file; do
	case "$(file -Sib "$file")" in
	  application/x-sharedlib\;*)      # Libraries (.so)
		strip -v $STRIP_SHARED "$file" ;;
	  application/x-archive\;*)        # Libraries (.a)
		strip -v $STRIP_STATIC "$file" ;;
	  application/x-executable\;*)     # Binaries
		strip -v $STRIP_BINARIES "$file" ;;
	  application/x-pie-executable\;*) # Relocatable binaries
		strip -v $STRIP_SHARED "$file" ;;
	esac
	done < <(find "$builddir" -type f -perm -u+x ! -name vmlinux -print0)

	echo "Stripping vmlinux..."
  	strip -v $STRIP_STATIC "$builddir/vmlinux"

	echo "Adding symlink..."
	mkdir -p "$DESTDIR/usr/src"
	ln -sr "$builddir" "$DESTDIR/usr/src/$name"


    #make install DESTDIR=$DESTDIR
}
